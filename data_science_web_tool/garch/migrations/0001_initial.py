# Generated by Django 5.1.7 on 2025-06-20 13:18

import django.db.models.deletion
from django.db import migrations
from django.db import models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("preprocessing", "0004_alter_dataupload_file_type"),
    ]

    operations = [
        migrations.CreateModel(
            name="GarchResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("model_type", models.CharField()),
                ("target_column", models.CharField()),
                ("forecast_horizon", models.IntegerField(blank=True, null=True)),
                (
                    "train_values",
                    models.JSONField(blank=True, help_text="Train data set", null=True),
                ),
                (
                    "val_predictions",
                    models.JSONField(
                        blank=True,
                        help_text="Validation data set predictions",
                        null=True,
                    ),
                ),
                (
                    "test_predictions",
                    models.JSONField(
                        blank=True, help_text="Test data set predictions", null=True
                    ),
                ),
                ("forecast", models.JSONField(blank=True, null=True)),
                ("train_percentage", models.FloatField(blank=True, null=True)),
                ("validation_percentage", models.FloatField(blank=True, null=True)),
                ("test_percentage", models.FloatField(blank=True, null=True)),
                (
                    "val_r_2",
                    models.FloatField(
                        blank=True, help_text="R2 score for validation data", null=True
                    ),
                ),
                (
                    "val_mse",
                    models.FloatField(
                        blank=True,
                        help_text="Mean squared error for validation data",
                        null=True,
                    ),
                ),
                (
                    "val_mae",
                    models.FloatField(
                        blank=True,
                        help_text="Mean absolute error for validation data",
                        null=True,
                    ),
                ),
                (
                    "val_rmse",
                    models.FloatField(
                        blank=True,
                        help_text="Root mean square error for validation data",
                        null=True,
                    ),
                ),
                (
                    "val_mape",
                    models.FloatField(
                        blank=True,
                        help_text="Mean absolute percentage error for validation data",
                        null=True,
                    ),
                ),
                (
                    "test_r_2",
                    models.FloatField(
                        blank=True, help_text="R2 score for test data", null=True
                    ),
                ),
                (
                    "test_mse",
                    models.FloatField(
                        blank=True,
                        help_text="Mean squared error for test data",
                        null=True,
                    ),
                ),
                (
                    "test_mae",
                    models.FloatField(
                        blank=True,
                        help_text="Mean absolute error for test data",
                        null=True,
                    ),
                ),
                (
                    "test_rmse",
                    models.FloatField(
                        blank=True,
                        help_text="Root mean square error for test data",
                        null=True,
                    ),
                ),
                (
                    "test_mape",
                    models.FloatField(
                        blank=True,
                        help_text="Mean absolute percentage error for test data",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "data",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="garch_results",
                        to="preprocessing.data",
                    ),
                ),
            ],
        ),
    ]
